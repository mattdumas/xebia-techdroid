<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.xebia.xke</groupId>
    <artifactId>xebia-techdroid</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>XebiaTechDroid</name>
    <description>Application for Android features training.</description>

    <modules>
        <module>xebia-techdroid-app</module>
        <module>xebia-techdroid-test</module>
    </modules>

    <properties>
        <!-- Plugins -->
        <plugin.compiler.version>2.5.1</plugin.compiler.version>
        <android.maven.plugin.version>3.3.0</android.maven.plugin.version>

        <!-- Android -->
        <android.version>4.1_r1</android.version>
        <android.api.level>16</android.api.level>
        <android.support.version>r9</android.support.version>
        <google.maps.version>16_r1</google.maps.version>
        <actionbarsherlock.version>4.1.0</actionbarsherlock.version>

        <!-- Test -->
        <junit.version>4.10</junit.version>
        <robotium.version>3.3</robotium.version>
        <robolectric.version>1.1</robolectric.version>
        <mockito.version>1.9.0</mockito.version>
        <fest.version>1.4</fest.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Android libraries -->
            <dependency>
                <groupId>android</groupId>
                <artifactId>android</artifactId>
                <version>${android.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>android.support</groupId>
                <artifactId>compatibility-v4</artifactId>
                <version>${android.support.version}</version>
            </dependency>
            <dependency>
                <groupId>android.support</groupId>
                <artifactId>compatibility-v7-gridlayout</artifactId>
                <version>${android.support.version}</version>
                <type>apklib</type>
            </dependency>
            <dependency>
                <groupId>com.google.android.maps</groupId>
                <artifactId>maps</artifactId>
                <version>${google.maps.version}</version>
                <scope>provided</scope>
            </dependency>
            
            <!-- Third party libraries -->
            <dependency>
                <groupId>com.actionbarsherlock</groupId>
                <artifactId>library</artifactId>
                <version>${actionbarsherlock.version}</version>
                <type>apklib</type>
            </dependency>
            
            <!-- Application modules -->
            <dependency>
                <groupId>fr.xebia.xke</groupId>
                <artifactId>xebia-techdroid-app</artifactId>
                <version>${project.version}</version>
                <type>apk</type>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>fr.xebia.xke</groupId>
                <artifactId>xebia-techdroid-app</artifactId>
                <version>${project.version}</version>
                <scope>provided</scope>
            </dependency>
            
            <!-- Tests -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.pivotallabs</groupId>
                <artifactId>robolectric</artifactId>
                <version>${robolectric.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.android.robotium</groupId>
                <artifactId>robotium-solo</artifactId>
                <version>${robotium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.easytesting</groupId>
                <artifactId>fest-assert</artifactId>
                <version>${fest.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.compiler.version}</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                    <artifactId>android-maven-plugin</artifactId>
                    <version>${android.maven.plugin.version}</version>
                    <configuration>
                        <!-- Give the path to your Android SDK and the Android 
                            version you're using -->
                        <sdk>
                            <platform>${android.api.level}</platform>
                        </sdk>

                        <!-- For the testing phase, this plugin will need 
                            to run an emulator called 'Default', that needs to be available in $HOME/.android/avd/ 
                            folder as Default.avd -->
                        <emulator>
                            <avd>Default</avd>
                            <wait>5554</wait>
                        </emulator>

                        <zipalign>
                            <verbose>true</verbose>
                        </zipalign>

                        <!-- ProGuard is a free Java class file shrinker, 
                            optimizer, obfuscator, and preverifier. It detects and removes unused classes, 
                            fields, methods, and attributes. It optimizes bytecode and removes unused 
                            instructions. It renames the remaining classes, fields, and methods using 
                            short meaningless names.This plugin will read the Proguard configurations 
                            inside specified file. -->
                        <proguard>
                            <config>proguard.cfg</config>
                        </proguard>

                        <!-- Remove the existing .apk from the device/emulator 
                            before installing the newly built .apk file. -->
                        <undeployBeforeDeploy>true</undeployBeforeDeploy>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jarsigner-plugin</artifactId>
                    <version>1.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4.3</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.pyx4me</groupId>
                    <artifactId>proguard-maven-plugin</artifactId>
                    <version>2.0.4</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.5</version>
                </plugin>

                <!--This plugin's configuration is used to store Eclipse 
                    m2e settings only. It has no influence on the Maven build itself. See http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.jayway.maven.plugins.android.generation2
                                        </groupId>
                                        <artifactId>
                                            android-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [3.2.0,)
                                        </versionRange>
                                        <goals>
                                            <goal>emulator-start</goal>
                                            <goal>manifest-update</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- Declare the available profiles -->
    <profiles>
        <!-- The standard profile (default) runs the instrumentation tests -->
        <profile>
            <id>standard</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>xebia-techdroid-app</module>
                <module>xebia-techdroid-test</module>
            </modules>
        </profile>

        <!-- The release profile does sign, proguard, zipalign ... but does 
            not run instrumentation tests -->
        <profile>
            <id>release</id>
            <!-- via this activation the profile is automatically used when 
                the release is done with the Maven Release Plugin -->
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <modules>
                <module>xebia-techdroid-app</module>
            </modules>
        </profile>
    </profiles>
</project>